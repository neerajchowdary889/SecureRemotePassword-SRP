import sympy

def find_generator(p):
    phi = p - 1
    factors = sympy.factorint(phi)
    for g in range(2, min(p, 100)):
        if not any(pow(g, phi // f, p) == 1 for f in factors):
            return g
    return None

# Generate a 1023 bit long prime number
p =48918391000052583934167065379545433780962148379021070661849415587199244428816975825151549694981094210550024376606328109486394806264424271050964403394893857257362615569729319803318958688018629272286069459234844728802571309403751742154278761506877859606248014098437143725485149592443200229491225879614195661712 
v =142053208759756921896415037309391437753546004590516896507198329358646039072583625424558322840642895944981213491106422501967976160716709174787797321383526377652040118330625146278345598031987182563422819156791961189320145956009515786404702821272888307629502197713541909195644763051784616381641210485557441508299

print(p>v)
g = find_generator(p)
print(f'The generator of the multiplicative group of the prime number {p} is {g}')
